{"version":3,"file":"dummy.js","sourceRoot":"","sources":["../../src/dummy.ts"],"names":[],"mappings":";AAAA,qBAAqB;AACrB,wBAAwB;;;;;AAMxB,0CAqCC;AAzCD,sDAA6B;AAE7B,uCAA6C;AAE7C,SAAgB,eAAe;IAC9B,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAA;IAErB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAA;IAEvB,GAAG,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QAC5C,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,CAAC,mBAAmB;QACpE,MAAM,UAAU,GAAe;YAC9B,0BAA0B,EAAE,iBAAiB;YAC7C,IAAI,EAAE,YAAY;YAClB,eAAe,EAAE,OAAO;YACxB,aAAa,EAAE,QAAQ;YACvB,EAAE,EAAE;gBACH,SAAS,EAAE,WAAW;gBACtB,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE,eAAe;gBACrB,UAAU,EAAE,mBAAmB;gBAC/B,MAAM,EAAE,MAAM;aACd;SACD,CAAA;QACD,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,GAAG,CAAC,GAAG,CAAC,wBAAwB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QAC/C,MAAM,aAAa,GAAkB;YACpC,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAA,2BAAiB,GAAE;SAC9B,CAAA;QACD,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IACxB,CAAC,CAAC,CAAA;IAEF,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QACjD,MAAM,QAAQ,GAAmB,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAA;QAC9E,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;IAEF,OAAO,GAAG,CAAA;AACX,CAAC","sourcesContent":["// Bitfocus AS - 2024\n// Author: William Viker\n\nimport express from 'express'\nimport type { ChargerStatus, DeviceIdentify, DeviceInfo } from './types'\nimport { generateBatteries } from './helpers'\n\nexport function KLVRDummyDevice() {\n\tconst app = express()\n\n\tapp.use(express.json())\n\n\tapp.get('/api/v1/device/info', (_req, res) => {\n\t\tconst randomTemperature = Math.random() * 4 + 24 // 24 to 28 degrees\n\t\tconst deviceInfo: DeviceInfo = {\n\t\t\tdeviceInternalTemperatureC: randomTemperature,\n\t\t\tname: 'Laddare #1',\n\t\t\tfirmwareVersion: '0.1.0',\n\t\t\tfirmwareBuild: 'abc123',\n\t\t\tip: {\n\t\t\t\tipAddress: '127.0.0.2',\n\t\t\t\tgatewayAddress: '10.0.0.1',\n\t\t\t\tmask: '255.255.255.0',\n\t\t\t\tmacAddress: '00:B0:D0:63:C2:26',\n\t\t\t\tmethod: 'dhcp',\n\t\t\t},\n\t\t}\n\t\tres.json(deviceInfo)\n\t})\n\n\tapp.get('/api/v1/charger/status', (_req, res) => {\n\t\tconst chargerStatus: ChargerStatus = {\n\t\t\tdeviceStatus: 'ok',\n\t\t\tbatteries: generateBatteries(),\n\t\t}\n\t\tres.json(chargerStatus)\n\t})\n\n\tapp.post('/api/v1/device/identify', (_req, res) => {\n\t\tconst response: DeviceIdentify = { message: 'Device identified successfully' }\n\t\tres.json(response)\n\t})\n\n\treturn app\n}\n"]}
{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/helpers.ts"],"names":[],"mappings":";AAAA,qBAAqB;AACrB,wBAAwB;;AAKxB,kEAeC;AAGD,8CAMC;AAzBD,oDAAoD;AACpD,SAAgB,2BAA2B;IAC1C,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,CAAC,mBAAmB;IACpE,MAAM,UAAU,GAAiC,CAAC,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;IACvG,MAAM,eAAe,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAA;IACjF,MAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,mBAAmB;IACnG,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAA,CAAC,iCAAiC;IAC9F,MAAM,cAAc,GAAG,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,CAAA;IAElF,OAAO;QACN,eAAe,EAAE,iBAAiB;QAClC,SAAS,EAAE,eAAe;QAC1B,oBAAoB,EAAE,mBAAmB;QACzC,oBAAoB,EAAE,mBAAmB;QACzC,QAAQ,EAAE,cAAc;KACxB,CAAA;AACF,CAAC;AAED,2CAA2C;AAC3C,SAAgB,iBAAiB;IAChC,MAAM,SAAS,GAAqC,EAAE,CAAA;IACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QAC7B,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,2BAA2B,EAAE,CAAA;IACxD,CAAC;IACD,OAAO,SAAS,CAAA;AACjB,CAAC","sourcesContent":["// Bitfocus AS - 2024\n// Author: William Viker\n\nimport type { BatteryStatus } from './types'\n\n// Helper function to generate random battery status\nexport function generateRandomBatteryStatus(): BatteryStatus {\n\tconst randomTemperature = Math.random() * 4 + 24 // 24 to 28 degrees\n\tconst slotStates: BatteryStatus['slotState'][] = ['charging', 'empty', 'not charging', 'error', 'done']\n\tconst randomSlotState = slotStates[Math.floor(Math.random() * slotStates.length)]\n\tconst randomChargePercent = Number.parseFloat((Math.random() * 100).toFixed(3)) // 0 to 100 percent\n\tconst randomTimeRemaining = Math.floor(Math.random() * 3600) // 0 to 3600 seconds (1 hour max)\n\tconst randomErrorMsg = randomSlotState === 'error' ? 'Battery Error Detected' : ''\n\n\treturn {\n\t\tbatteryBayTempC: randomTemperature,\n\t\tslotState: randomSlotState,\n\t\tstateOfChargePercent: randomChargePercent,\n\t\ttimeRemainingSeconds: randomTimeRemaining,\n\t\terrorMsg: randomErrorMsg,\n\t}\n}\n\n// Generate 42 batteries with random status\nexport function generateBatteries(): { [key: string]: BatteryStatus } {\n\tconst batteries: { [key: string]: BatteryStatus } = {}\n\tfor (let i = 0; i < 42; i++) {\n\t\tbatteries[i.toString()] = generateRandomBatteryStatus()\n\t}\n\treturn batteries\n}\n"]}